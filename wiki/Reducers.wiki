#summary Describes how to construct reducers.

= Reducers =

To define your own reducer, you should write a class derived from !ReduceBase.

== Declarations ==
Declarations, both field, emit, and separator declarations are the same as for mappers [Mappers].  

Reducer input fie names are ordinarily the same as mapper output field names, but they don't have to be: you can name them anything.

== Processing ==
=== Begin and End ===
{{{
process_begin(dummy, output)
process_end(dummy, output)
}}}
As with mappers, {{{process_begin}}} is called before any input records are processed.  {{{Process_end}}} is called after all input records have been processed.  

=== Groups ===
process_init
process_each
process_term

== Output Records ==
{{{new_output}}}

As with mappers, you can get instance of output records by calling {{{new_output}}}.
